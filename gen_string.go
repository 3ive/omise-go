package omise

/*
!!! DO NOT MODIFY !!!

autogenerated
 src: gen_string_job.tmpl
 job: &main.GenStringJob{Fields:map[string][]string{"Customer":[]string{"ID", "Live", "Email", "Description"}, "Recipient":[]string{"ID", "Live", "Name", "Email", "Type"}, "Charge":[]string{"ID", "Live", "Amount", "Currency", "Capture", "Authorized", "Reversed", "Paid"}, "Deletion":[]string{"ID", "Live", "Deleted"}, "Event":[]string{"ID", "Live", "Key", "Data"}, "Refund":[]string{"ID", "Live", "Amount", "Currency", "Charge"}, "SearchResult":[]string{"ID", "Live"}, "Account":[]string{"ID", "Live", "Email"}, "Card":[]string{"ID", "Live", "LastDigits", "Brand", "ExpirationMonth", "ExpirationYear", "Name"}, "Token":[]string{"ID", "Live", "Used", "Card"}, "Balance":[]string{"ID", "Live", "Available", "Total", "Currency"}, "BankAccount":[]string{"ID", "Live", "Brand", "LastDigits", "Name"}, "Dispute":[]string{"ID", "Live", "Amount", "Currency", "Status", "Charge"}, "Document":[]string{"ID", "Live", "Filename"}, "Transaction":[]string{"ID", "Live", "Source", "Type", "Amount", "Currency", "Transferable"}, "Transfer":[]string{"ID", "Live", "Recipient", "Sent", "Paid", "Fee", "Amount", "Currency"}}}
  on: Tue Sep 06 14:05:24 +0700 2016
  by: chakrit
*/

import (
	"fmt"

	"github.com/fatih/color"
)

func (m *Account) String() string {
	return "" +
		"ID=" + fmt.Sprint(m.ID) + " " +
		"Live=" + fmt.Sprint(m.Live) + " " +
		"Email=" + fmt.Sprint(m.Email) + " " + ""
}

func (m *Account) ColorString() string {
	cyan := color.New(color.FgCyan).SprintFunc()
	_ = cyan
	return "" +
		cyan("ID=") + fmt.Sprint(m.ID) + " " +
		cyan("Live=") + fmt.Sprint(m.Live) + " " +
		cyan("Email=") + fmt.Sprint(m.Email) + " " + ""
}

func (m *Balance) String() string {
	return "" +
		"ID=" + fmt.Sprint(m.ID) + " " +
		"Live=" + fmt.Sprint(m.Live) + " " +
		"Available=" + fmt.Sprint(m.Available) + " " +
		"Total=" + fmt.Sprint(m.Total) + " " +
		"Currency=" + fmt.Sprint(m.Currency) + " " + ""
}

func (m *Balance) ColorString() string {
	cyan := color.New(color.FgCyan).SprintFunc()
	_ = cyan
	return "" +
		cyan("ID=") + fmt.Sprint(m.ID) + " " +
		cyan("Live=") + fmt.Sprint(m.Live) + " " +
		cyan("Available=") + fmt.Sprint(m.Available) + " " +
		cyan("Total=") + fmt.Sprint(m.Total) + " " +
		cyan("Currency=") + fmt.Sprint(m.Currency) + " " + ""
}

func (m *BankAccount) String() string {
	return "" +
		"ID=" + fmt.Sprint(m.ID) + " " +
		"Live=" + fmt.Sprint(m.Live) + " " +
		"Brand=" + fmt.Sprint(m.Brand) + " " +
		"LastDigits=" + fmt.Sprint(m.LastDigits) + " " +
		"Name=" + fmt.Sprint(m.Name) + " " + ""
}

func (m *BankAccount) ColorString() string {
	cyan := color.New(color.FgCyan).SprintFunc()
	_ = cyan
	return "" +
		cyan("ID=") + fmt.Sprint(m.ID) + " " +
		cyan("Live=") + fmt.Sprint(m.Live) + " " +
		cyan("Brand=") + fmt.Sprint(m.Brand) + " " +
		cyan("LastDigits=") + fmt.Sprint(m.LastDigits) + " " +
		cyan("Name=") + fmt.Sprint(m.Name) + " " + ""
}

func (m *Card) String() string {
	return "" +
		"ID=" + fmt.Sprint(m.ID) + " " +
		"Live=" + fmt.Sprint(m.Live) + " " +
		"LastDigits=" + fmt.Sprint(m.LastDigits) + " " +
		"Brand=" + fmt.Sprint(m.Brand) + " " +
		"ExpirationMonth=" + fmt.Sprint(m.ExpirationMonth) + " " +
		"ExpirationYear=" + fmt.Sprint(m.ExpirationYear) + " " +
		"Name=" + fmt.Sprint(m.Name) + " " + ""
}

func (m *Card) ColorString() string {
	cyan := color.New(color.FgCyan).SprintFunc()
	_ = cyan
	return "" +
		cyan("ID=") + fmt.Sprint(m.ID) + " " +
		cyan("Live=") + fmt.Sprint(m.Live) + " " +
		cyan("LastDigits=") + fmt.Sprint(m.LastDigits) + " " +
		cyan("Brand=") + fmt.Sprint(m.Brand) + " " +
		cyan("ExpirationMonth=") + fmt.Sprint(m.ExpirationMonth) + " " +
		cyan("ExpirationYear=") + fmt.Sprint(m.ExpirationYear) + " " +
		cyan("Name=") + fmt.Sprint(m.Name) + " " + ""
}

func (m *Charge) String() string {
	return "" +
		"ID=" + fmt.Sprint(m.ID) + " " +
		"Live=" + fmt.Sprint(m.Live) + " " +
		"Amount=" + fmt.Sprint(m.Amount) + " " +
		"Currency=" + fmt.Sprint(m.Currency) + " " +
		"Capture=" + fmt.Sprint(m.Capture) + " " +
		"Authorized=" + fmt.Sprint(m.Authorized) + " " +
		"Reversed=" + fmt.Sprint(m.Reversed) + " " +
		"Paid=" + fmt.Sprint(m.Paid) + " " + ""
}

func (m *Charge) ColorString() string {
	cyan := color.New(color.FgCyan).SprintFunc()
	_ = cyan
	return "" +
		cyan("ID=") + fmt.Sprint(m.ID) + " " +
		cyan("Live=") + fmt.Sprint(m.Live) + " " +
		cyan("Amount=") + fmt.Sprint(m.Amount) + " " +
		cyan("Currency=") + fmt.Sprint(m.Currency) + " " +
		cyan("Capture=") + fmt.Sprint(m.Capture) + " " +
		cyan("Authorized=") + fmt.Sprint(m.Authorized) + " " +
		cyan("Reversed=") + fmt.Sprint(m.Reversed) + " " +
		cyan("Paid=") + fmt.Sprint(m.Paid) + " " + ""
}

func (m *Customer) String() string {
	return "" +
		"ID=" + fmt.Sprint(m.ID) + " " +
		"Live=" + fmt.Sprint(m.Live) + " " +
		"Email=" + fmt.Sprint(m.Email) + " " +
		"Description=" + fmt.Sprint(m.Description) + " " + ""
}

func (m *Customer) ColorString() string {
	cyan := color.New(color.FgCyan).SprintFunc()
	_ = cyan
	return "" +
		cyan("ID=") + fmt.Sprint(m.ID) + " " +
		cyan("Live=") + fmt.Sprint(m.Live) + " " +
		cyan("Email=") + fmt.Sprint(m.Email) + " " +
		cyan("Description=") + fmt.Sprint(m.Description) + " " + ""
}

func (m *Deletion) String() string {
	return "" +
		"ID=" + fmt.Sprint(m.ID) + " " +
		"Live=" + fmt.Sprint(m.Live) + " " +
		"Deleted=" + fmt.Sprint(m.Deleted) + " " + ""
}

func (m *Deletion) ColorString() string {
	cyan := color.New(color.FgCyan).SprintFunc()
	_ = cyan
	return "" +
		cyan("ID=") + fmt.Sprint(m.ID) + " " +
		cyan("Live=") + fmt.Sprint(m.Live) + " " +
		cyan("Deleted=") + fmt.Sprint(m.Deleted) + " " + ""
}

func (m *Dispute) String() string {
	return "" +
		"ID=" + fmt.Sprint(m.ID) + " " +
		"Live=" + fmt.Sprint(m.Live) + " " +
		"Amount=" + fmt.Sprint(m.Amount) + " " +
		"Currency=" + fmt.Sprint(m.Currency) + " " +
		"Status=" + fmt.Sprint(m.Status) + " " +
		"Charge=" + fmt.Sprint(m.Charge) + " " + ""
}

func (m *Dispute) ColorString() string {
	cyan := color.New(color.FgCyan).SprintFunc()
	_ = cyan
	return "" +
		cyan("ID=") + fmt.Sprint(m.ID) + " " +
		cyan("Live=") + fmt.Sprint(m.Live) + " " +
		cyan("Amount=") + fmt.Sprint(m.Amount) + " " +
		cyan("Currency=") + fmt.Sprint(m.Currency) + " " +
		cyan("Status=") + fmt.Sprint(m.Status) + " " +
		cyan("Charge=") + fmt.Sprint(m.Charge) + " " + ""
}

func (m *Document) String() string {
	return "" +
		"ID=" + fmt.Sprint(m.ID) + " " +
		"Live=" + fmt.Sprint(m.Live) + " " +
		"Filename=" + fmt.Sprint(m.Filename) + " " + ""
}

func (m *Document) ColorString() string {
	cyan := color.New(color.FgCyan).SprintFunc()
	_ = cyan
	return "" +
		cyan("ID=") + fmt.Sprint(m.ID) + " " +
		cyan("Live=") + fmt.Sprint(m.Live) + " " +
		cyan("Filename=") + fmt.Sprint(m.Filename) + " " + ""
}

func (m *Event) String() string {
	return "" +
		"ID=" + fmt.Sprint(m.ID) + " " +
		"Live=" + fmt.Sprint(m.Live) + " " +
		"Key=" + fmt.Sprint(m.Key) + " " +
		"Data=" + fmt.Sprint(m.Data) + " " + ""
}

func (m *Event) ColorString() string {
	cyan := color.New(color.FgCyan).SprintFunc()
	_ = cyan
	return "" +
		cyan("ID=") + fmt.Sprint(m.ID) + " " +
		cyan("Live=") + fmt.Sprint(m.Live) + " " +
		cyan("Key=") + fmt.Sprint(m.Key) + " " +
		cyan("Data=") + fmt.Sprint(m.Data) + " " + ""
}

func (m *Recipient) String() string {
	return "" +
		"ID=" + fmt.Sprint(m.ID) + " " +
		"Live=" + fmt.Sprint(m.Live) + " " +
		"Name=" + fmt.Sprint(m.Name) + " " +
		"Email=" + fmt.Sprint(m.Email) + " " +
		"Type=" + fmt.Sprint(m.Type) + " " + ""
}

func (m *Recipient) ColorString() string {
	cyan := color.New(color.FgCyan).SprintFunc()
	_ = cyan
	return "" +
		cyan("ID=") + fmt.Sprint(m.ID) + " " +
		cyan("Live=") + fmt.Sprint(m.Live) + " " +
		cyan("Name=") + fmt.Sprint(m.Name) + " " +
		cyan("Email=") + fmt.Sprint(m.Email) + " " +
		cyan("Type=") + fmt.Sprint(m.Type) + " " + ""
}

func (m *Refund) String() string {
	return "" +
		"ID=" + fmt.Sprint(m.ID) + " " +
		"Live=" + fmt.Sprint(m.Live) + " " +
		"Amount=" + fmt.Sprint(m.Amount) + " " +
		"Currency=" + fmt.Sprint(m.Currency) + " " +
		"Charge=" + fmt.Sprint(m.Charge) + " " + ""
}

func (m *Refund) ColorString() string {
	cyan := color.New(color.FgCyan).SprintFunc()
	_ = cyan
	return "" +
		cyan("ID=") + fmt.Sprint(m.ID) + " " +
		cyan("Live=") + fmt.Sprint(m.Live) + " " +
		cyan("Amount=") + fmt.Sprint(m.Amount) + " " +
		cyan("Currency=") + fmt.Sprint(m.Currency) + " " +
		cyan("Charge=") + fmt.Sprint(m.Charge) + " " + ""
}

func (m *SearchResult) String() string {
	return "" +
		"ID=" + fmt.Sprint(m.ID) + " " +
		"Live=" + fmt.Sprint(m.Live) + " " + ""
}

func (m *SearchResult) ColorString() string {
	cyan := color.New(color.FgCyan).SprintFunc()
	_ = cyan
	return "" +
		cyan("ID=") + fmt.Sprint(m.ID) + " " +
		cyan("Live=") + fmt.Sprint(m.Live) + " " + ""
}

func (m *Token) String() string {
	return "" +
		"ID=" + fmt.Sprint(m.ID) + " " +
		"Live=" + fmt.Sprint(m.Live) + " " +
		"Used=" + fmt.Sprint(m.Used) + " " +
		"Card=" + fmt.Sprint(m.Card) + " " + ""
}

func (m *Token) ColorString() string {
	cyan := color.New(color.FgCyan).SprintFunc()
	_ = cyan
	return "" +
		cyan("ID=") + fmt.Sprint(m.ID) + " " +
		cyan("Live=") + fmt.Sprint(m.Live) + " " +
		cyan("Used=") + fmt.Sprint(m.Used) + " " +
		cyan("Card=") + fmt.Sprint(m.Card) + " " + ""
}

func (m *Transaction) String() string {
	return "" +
		"ID=" + fmt.Sprint(m.ID) + " " +
		"Live=" + fmt.Sprint(m.Live) + " " +
		"Source=" + fmt.Sprint(m.Source) + " " +
		"Type=" + fmt.Sprint(m.Type) + " " +
		"Amount=" + fmt.Sprint(m.Amount) + " " +
		"Currency=" + fmt.Sprint(m.Currency) + " " +
		"Transferable=" + fmt.Sprint(m.Transferable) + " " + ""
}

func (m *Transaction) ColorString() string {
	cyan := color.New(color.FgCyan).SprintFunc()
	_ = cyan
	return "" +
		cyan("ID=") + fmt.Sprint(m.ID) + " " +
		cyan("Live=") + fmt.Sprint(m.Live) + " " +
		cyan("Source=") + fmt.Sprint(m.Source) + " " +
		cyan("Type=") + fmt.Sprint(m.Type) + " " +
		cyan("Amount=") + fmt.Sprint(m.Amount) + " " +
		cyan("Currency=") + fmt.Sprint(m.Currency) + " " +
		cyan("Transferable=") + fmt.Sprint(m.Transferable) + " " + ""
}

func (m *Transfer) String() string {
	return "" +
		"ID=" + fmt.Sprint(m.ID) + " " +
		"Live=" + fmt.Sprint(m.Live) + " " +
		"Recipient=" + fmt.Sprint(m.Recipient) + " " +
		"Sent=" + fmt.Sprint(m.Sent) + " " +
		"Paid=" + fmt.Sprint(m.Paid) + " " +
		"Fee=" + fmt.Sprint(m.Fee) + " " +
		"Amount=" + fmt.Sprint(m.Amount) + " " +
		"Currency=" + fmt.Sprint(m.Currency) + " " + ""
}

func (m *Transfer) ColorString() string {
	cyan := color.New(color.FgCyan).SprintFunc()
	_ = cyan
	return "" +
		cyan("ID=") + fmt.Sprint(m.ID) + " " +
		cyan("Live=") + fmt.Sprint(m.Live) + " " +
		cyan("Recipient=") + fmt.Sprint(m.Recipient) + " " +
		cyan("Sent=") + fmt.Sprint(m.Sent) + " " +
		cyan("Paid=") + fmt.Sprint(m.Paid) + " " +
		cyan("Fee=") + fmt.Sprint(m.Fee) + " " +
		cyan("Amount=") + fmt.Sprint(m.Amount) + " " +
		cyan("Currency=") + fmt.Sprint(m.Currency) + " " + ""
}
